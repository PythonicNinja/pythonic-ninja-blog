---
const { 
  title = 'Pythonic Ninja', 
  description = 'Tech & AI — serene speed', 
  ogImage,
  canonicalURL,
  type = 'website'
} = Astro.props;

const siteURL = Astro.site || 'https://pythonic.ninja';
const currentURL = canonicalURL || new URL(Astro.url.pathname, siteURL);
const image = ogImage || `${siteURL}/og-default.png`;
const siteName = 'Pythonic Ninja';
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="author" content="PythonicNinja">
    <meta name="description" content={description} />
    
    {/* Canonical URL */}
    <link rel="canonical" href={currentURL} />
    
    {/* Open Graph / Facebook */}
    <meta property="og:type" content={type} />
    <meta property="og:url" content={currentURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:site_name" content={siteName} />
    
    {/* Twitter Card */}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />
    
    {/* Favicon */}
    <link rel="shortcut icon" href="https://avatars0.githubusercontent.com/u/1098417?s=460&v=4">
    
    {/* Fonts */}
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Cormorant+Garamond:wght@400;500;600&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Cormorant+Garamond:wght@400;500;600&display=swap" media="print" onload="this.media='all'" />
    <noscript>
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Cormorant+Garamond:wght@400;500;600&display=swap" />
    </noscript>
    
    {/* Styles */}
    <link rel="stylesheet" href={`/styles/global.css?v=${Date.now()}`} />
    
    {/* Structured Data */}
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": siteName,
      "url": siteURL,
      "author": {
        "@type": "Person",
        "name": "PythonicNinja"
      }
    })} />
  </head>
  <body>
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <header class="site-header">
      <a href="/" class="brand">
        <img src="https://avatars0.githubusercontent.com/u/1098417?s=460&v=4" alt={title} />
        Pythonic&nbsp;Ninja
      </a>
      <nav class="nav">
        <a href="https://github.com/PythonicNinja" class="icon-btn" target="_blank" rel="noopener noreferrer" aria-label="GitHub">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18" class="icon"><path fill="currentColor" d="M12 .5a11.5 11.5 0 0 0-3.64 22.42c.58.11.8-.25.8-.56v-1.98c-3.26.71-3.95-1.4-3.95-1.4-.53-1.35-1.3-1.71-1.3-1.71-1.06-.72.08-.71.08-.71 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.72 1.26 3.38.96.11-.76.41-1.26.74-1.55-2.6-.3-5.33-1.3-5.33-5.77 0-1.28.46-2.33 1.2-3.15-.12-.3-.52-1.52.11-3.16 0 0 .98-.32 3.2 1.2.94-.26 1.95-.39 2.96-.4 1.01 0 2.02.14 2.96.4 2.22-1.52 3.2-1.2 3.2-1.2.63 1.64.23 2.86.11 3.16.75.82 1.2 1.87 1.2 3.15 0 4.48-2.74 5.46-5.35 5.76.42.36.79 1.07.79 2.17v3.22c0 .31.21.68.8.56A11.5 11.5 0 0 0 12 .5Z"/></svg>
        </a>
        <a href="https://www.linkedin.com/in/wojtek-nowak-78639a196/" class="icon-btn" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18" class="icon"><path fill="currentColor" d="M4.98 3.5C4.98 4.88 3.86 6 2.5 6S0 4.88 0 3.5 1.12 1 2.5 1 4.98 2.12 4.98 3.5zM.5 8h4V24h-4V8zM8 8h3.8v2.2h.05c.53-1 1.83-2.2 3.77-2.2 4.03 0 4.78 2.65 4.78 6.1V24h-4v-7.1c0-1.7-.03-3.88-2.36-3.88-2.36 0-2.72 1.84-2.72 3.76V24H8V8z"/></svg>
        </a>
        <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">☾</button>
      </nav>
    </header>
    <main id="main-content" class="container">
      <slot />
    </main>
    <footer class="footer">
      <div class="footer-main-text">© {new Date().getFullYear()} Pythonic Ninja</div>
      <div style="margin-top:8px;display:flex;gap:12px;justify-content:center;flex-wrap:wrap">
        <a class="nav-link" href="/rss.xml" rel="alternate" type="application/rss+xml" title="RSS Feed">RSS</a>
        <a class="nav-link" href="https://github.com/PythonicNinja" target="_blank" rel="noopener noreferrer">GitHub</a>
        <a class="nav-link" href="https://www.linkedin.com/in/wojtek-nowak-78639a196/" target="_blank" rel="noopener noreferrer">LinkedIn</a>
        <a class="nav-link" href="https://www.skills.google/public_profiles/d46f18e0-9d4a-4197-b9b7-6d5a8317700f" target="_blank" rel="noopener noreferrer">Google Skills</a>
      </div>
    </footer>
    <script>
      const storageKey = 'theme';
      const root = document.documentElement;
      function applyTheme(value){
        if (value === 'dark') { root.setAttribute('data-theme','dark'); }
        else if (value === 'light') { root.setAttribute('data-theme','light'); }
        else { root.removeAttribute('data-theme'); }
      }
      // Initialize from storage
      try { applyTheme(localStorage.getItem(storageKey)); } catch {}
      // Toggle handler
      document.getElementById('theme-toggle')?.addEventListener('click', () => {
        const current = root.getAttribute('data-theme');
        const next = current === 'dark' ? 'light' : 'dark';
        applyTheme(next);
        try { localStorage.setItem(storageKey, next); } catch {}
      });

      // Enhance code blocks with copy buttons
      function addCopyButtons(){
        const pres = document.querySelectorAll('article.prose pre');
        pres.forEach(pre => {
          if (pre.querySelector('button.copy-btn')) return;
          const btn = document.createElement('button');
          btn.className = 'copy-btn';
          btn.type = 'button';
          btn.textContent = 'Copy';
          btn.addEventListener('click', async () => {
            const code = pre.querySelector('code');
            const text = code ? code.innerText : pre.innerText;
            try {
              await navigator.clipboard.writeText(text);
              const prev = btn.textContent;
              btn.textContent = 'Copied';
              setTimeout(() => (btn.textContent = prev), 1200);
            } catch (e) {
              // fallback
              const ta = document.createElement('textarea');
              ta.value = text; document.body.appendChild(ta); ta.select();
              try { document.execCommand('copy'); } catch {}
              document.body.removeChild(ta);
              const prev = btn.textContent; btn.textContent = 'Copied'; setTimeout(() => (btn.textContent = prev), 1200);
            }
          });
          pre.appendChild(btn);
        });
      }
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', addCopyButtons);
      } else {
        addCopyButtons();
      }
    </script>
  </body>
</html>
